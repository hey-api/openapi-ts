// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { ServiceWithEmptyTagData, PatchApiVbyApiVersionNoTagData, FooWowData, DeleteCallWithoutParametersAndResponseData, GetCallWithoutParametersAndResponseData, HeadCallWithoutParametersAndResponseData, OptionsCallWithoutParametersAndResponseData, PatchCallWithoutParametersAndResponseData, PostCallWithoutParametersAndResponseData, PutCallWithoutParametersAndResponseData, CallWithDescriptionsData, CallWithParametersData, CallWithWeirdParameterNamesData, CallWithDefaultParametersData, CallWithDefaultOptionalParametersData, CallToTestOrderOfParamsData, DuplicateNameData, DuplicateName2Data, DuplicateName3Data, DuplicateName4Data, CallWithNoContentResponseData, CallWithResponseAndNoContentResponseData, CallWithResponseAndNoContentResponseResponse, DummyAData, DummyBData, CallWithResponseData, CallWithResponseResponse, CallWithDuplicateResponsesData, CallWithDuplicateResponsesResponse, CallWithDuplicateResponsesError, CallWithResponsesData, CallWithResponsesResponse, CallWithResponsesError, CollectionFormatData, TypesData, TypesResponse, ComplexTypesData, ComplexTypesResponse, CallWithResultFromHeaderData, TestErrorCodeData, NonAsciiæøåÆøÅöôêÊ字符串Data, NonAsciiæøåÆøÅöôêÊ字符串Response, PostApiVbyApiVersionBodyData, PostApiVbyApiVersionBodyResponse, PostApiVbyApiVersionBodyError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class DefaultService {
    public static serviceWithEmptyTag<ThrowOnError extends boolean = false>(options?: Options<ServiceWithEmptyTagData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    public static patchApiVbyApiVersionNoTag<ThrowOnError extends boolean = false>(options?: Options<PatchApiVbyApiVersionNoTagData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    public static fooWow<ThrowOnError extends boolean = false>(options?: Options<FooWowData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no+tag',
            ...options
        });
    }
    
    /**
     * Body should not be unknown
     * Body should not be unknown
     */
    public static postApiVbyApiVersionBody<ThrowOnError extends boolean = false>(options: Options<PostApiVbyApiVersionBodyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostApiVbyApiVersionBodyResponse, PostApiVbyApiVersionBodyError, ThrowOnError>({
            url: '/api/v{api-version}/body',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class SimpleService {
    public static deleteCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<DeleteCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static getCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<GetCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static headCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<HeadCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).head<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static optionsCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<OptionsCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).options<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static patchCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PatchCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static postCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PostCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
    public static putCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: Options<PutCallWithoutParametersAndResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/simple',
            ...options
        });
    }
    
}

export class DescriptionsService {
    public static callWithDescriptions<ThrowOnError extends boolean = false>(options?: Options<CallWithDescriptionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/descriptions/',
            ...options
        });
    }
    
}

export class ParametersService {
    public static callWithParameters<ThrowOnError extends boolean = false>(options: Options<CallWithParametersData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters/{parameterPath}',
            ...options
        });
    }
    
    public static callWithWeirdParameterNames<ThrowOnError extends boolean = false>(options: Options<CallWithWeirdParameterNamesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}',
            ...options
        });
    }
    
}

export class DefaultsService {
    public static callWithDefaultParameters<ThrowOnError extends boolean = false>(options: Options<CallWithDefaultParametersData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
    public static callWithDefaultOptionalParameters<ThrowOnError extends boolean = false>(options?: Options<CallWithDefaultOptionalParametersData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
    public static callToTestOrderOfParams<ThrowOnError extends boolean = false>(options: Options<CallToTestOrderOfParamsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/defaults',
            ...options
        });
    }
    
}

export class DuplicateService {
    public static duplicateName<ThrowOnError extends boolean = false>(options?: Options<DuplicateNameData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName2<ThrowOnError extends boolean = false>(options?: Options<DuplicateName2Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName3<ThrowOnError extends boolean = false>(options?: Options<DuplicateName3Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
    public static duplicateName4<ThrowOnError extends boolean = false>(options?: Options<DuplicateName4Data, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/duplicate',
            ...options
        });
    }
    
}

export class NoContentService {
    public static callWithNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/no-content',
            ...options
        });
    }
    
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseAndNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseAndNoContentResponseResponse, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/response-and-no-content',
            ...options
        });
    }
    
}

export class ResponseService {
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseAndNoContentResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseAndNoContentResponseResponse, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/response-and-no-content',
            ...options
        });
    }
    
    public static callWithResponse<ThrowOnError extends boolean = false>(options?: Options<CallWithResponseData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallWithResponseResponse, unknown, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
    public static callWithDuplicateResponses<ThrowOnError extends boolean = false>(options?: Options<CallWithDuplicateResponsesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CallWithDuplicateResponsesResponse, CallWithDuplicateResponsesError, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
    public static callWithResponses<ThrowOnError extends boolean = false>(options?: Options<CallWithResponsesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).put<CallWithResponsesResponse, CallWithResponsesError, ThrowOnError>({
            url: '/api/v{api-version}/response',
            ...options
        });
    }
    
}

export class MultipleTags1Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: Options<DummyAData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/a',
            ...options
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class MultipleTags2Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: Options<DummyAData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/a',
            ...options
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class MultipleTags3Service {
    public static dummyB<ThrowOnError extends boolean = false>(options?: Options<DummyBData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/multiple-tags/b',
            ...options
        });
    }
    
}

export class CollectionFormatService {
    public static collectionFormat<ThrowOnError extends boolean = false>(options: Options<CollectionFormatData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            querySerializer: {
                array: {
                    explode: false,
                    style: 'form'
                }
            },
            url: '/api/v{api-version}/collectionFormat',
            ...options
        });
    }
    
}

export class TypesService {
    public static types<ThrowOnError extends boolean = false>(options: Options<TypesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<TypesResponse, unknown, ThrowOnError>({
            querySerializer: {
                array: {
                    explode: false,
                    style: 'form'
                }
            },
            url: '/api/v{api-version}/types',
            ...options
        });
    }
    
}

export class ComplexService {
    public static complexTypes<ThrowOnError extends boolean = false>(options: Options<ComplexTypesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ComplexTypesResponse, unknown, ThrowOnError>({
            url: '/api/v{api-version}/complex',
            ...options
        });
    }
    
}

export class HeaderService {
    public static callWithResultFromHeader<ThrowOnError extends boolean = false>(options?: Options<CallWithResultFromHeaderData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/header',
            ...options
        });
    }
    
}

export class ErrorService {
    public static testErrorCode<ThrowOnError extends boolean = false>(options: Options<TestErrorCodeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            url: '/api/v{api-version}/error',
            ...options
        });
    }
    
}

export class NonAsciiÆøåÆøÅöôêÊService {
    public static nonAsciiæøåÆøÅöôêÊ字符串<ThrowOnError extends boolean = false>(options: Options<NonAsciiæøåÆøÅöôêÊ字符串Data, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<NonAsciiæøåÆøÅöôêÊ字符串Response, unknown, ThrowOnError>({
            url: '/api/v{api-version}/non-ascii-æøåÆØÅöôêÊ字符串',
            ...options
        });
    }
    
}