// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod/v3';

/**
 * This is Bar schema.
 */
export const zBar: z.AnyZodObject = z.object({
    get foo(): z.ZodTypeAny {
        return z.lazy(() => {
            return zFoo;
        }).optional();
    }
});

/**
 * This is Foo schema.
 */
export const zFoo: z.ZodTypeAny = z.union([
    z.object({
        foo: z.string().regex(/^\d{3}-\d{2}-\d{4}$/).optional(),
        get bar() {
            return zBar.optional();
        },
        get baz(): z.ZodTypeAny {
            return z.array(z.lazy(() => {
                return zFoo;
            })).optional();
        },
        qux: z.number().int().gt(0).optional().default(0)
    }),
    z.null()
]).default(null);

export const zBaz = z.string().regex(/foo\nbar/).readonly().default('baz');

export const zQux = z.record(z.object({
    qux: z.string().optional()
}));

/**
 * This is Foo parameter.
 */
export const zFoo2 = z.string();

export const zFoo3: z.AnyZodObject = z.object({
    get foo() {
        return zBar.optional();
    }
});

export const zPatchFooData: z.AnyZodObject = z.object({
    body: z.object({
        foo: z.string().optional()
    }),
    path: z.never().optional(),
    query: z.object({
        foo: z.string().optional(),
        get bar() {
            return zBar.optional();
        },
        baz: z.object({
            baz: z.string().optional()
        }).optional(),
        qux: z.string().date().optional(),
        quux: z.string().datetime({
            offset: true
        }).optional()
    }).optional()
});

export const zPostFooData: z.AnyZodObject = z.object({
    get body() {
        return zFoo3;
    },
    path: z.never().optional(),
    query: z.never().optional()
});
