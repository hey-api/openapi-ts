// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

/**
 * This is Bar schema.
 */
export const zBar = z.object({
    get foo(): z.ZodOptional {
        return z.optional(zFoo);
    }
});

/**
 * This is Foo schema.
 */
export const zFoo = z.union([
    z.object({
        foo: z.optional(z.string().regex(/^\d{3}-\d{2}-\d{4}$/)),
        get bar(): z.ZodOptional {
            return z.optional(zBar);
        },
        get baz(): z.ZodOptional {
            return z.optional(z.array(z.lazy((): any => {
                return zFoo;
            })));
        },
        qux: z.optional(z.int().gt(0)).default(0)
    }),
    z.null()
]).default(null);

export const zBaz = z.string().regex(/foo\nbar/).readonly().default('baz');

export const zQux = z.record(z.string(), z.object({
    qux: z.optional(z.string())
}));

/**
 * This is Foo parameter.
 */
export const zFoo2 = z.string();

export const zFoo3 = z.object({
    get foo(): z.ZodOptional {
        return z.optional(zBar);
    }
});

export const zPatchFooData = z.object({
    body: z.object({
        foo: z.optional(z.string())
    }),
    path: z.optional(z.never()),
    get query(): z.ZodOptional {
        return z.optional(z.object({
            foo: z.optional(z.string()),
            get bar(): z.ZodOptional {
                return z.optional(zBar);
            },
            baz: z.optional(z.object({
                baz: z.optional(z.string())
            })),
            qux: z.optional(z.iso.date()),
            quux: z.optional(z.iso.datetime())
        }));
    }
});

export const zPostFooData = z.object({
    get body() {
        return zFoo3;
    },
    path: z.optional(z.never()),
    query: z.optional(z.never())
});
