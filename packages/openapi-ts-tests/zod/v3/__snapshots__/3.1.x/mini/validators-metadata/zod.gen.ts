// This file is auto-generated by @hey-api/openapi-ts

import * as z from 'zod/v4-mini';

export const zBaz = z._default(z.readonly(z.string().check(z.regex(/foo\nbar/))), 'baz');

export const zQux = z.record(z.string(), z.object({
    qux: z.optional(z.string())
}));

/**
 * This is Foo schema.
 */
export const zFoo = z._default(z.union([
    z.object({
        foo: z.optional(z.string().check(z.regex(/^\d{3}-\d{2}-\d{4}$/)).register(z.globalRegistry, {
            description: 'This is foo property.'
        })),
        get bar() {
            return z.optional(z.lazy((): any => {
                return zBar;
            }));
        },
        get baz() {
            return z.optional(z.array(z.lazy((): any => {
                return zFoo;
            })).register(z.globalRegistry, {
                description: 'This is baz property.'
            }));
        },
        qux: z._default(z.optional(z.int().check(z.gt(0)).register(z.globalRegistry, {
            description: 'This is qux property.'
        })), 0)
    }),
    z.null()
]), null);

/**
 * This is Bar schema.
 */
export const zBar = z.object({
    foo: z.optional(zFoo)
}).register(z.globalRegistry, {
    description: 'This is Bar schema.'
});

/**
 * This is Foo parameter.
 */
export const zFoo2 = z.string().register(z.globalRegistry, {
    description: 'This is Foo parameter.'
});

export const zFoo3 = z.object({
    foo: z.optional(zBar)
});

export const zPatchFooData = z.object({
    body: z.object({
        foo: z.optional(z.string())
    }),
    path: z.optional(z.never()),
    query: z.optional(z.object({
        foo: z.optional(z.string().register(z.globalRegistry, {
            description: 'This is Foo parameter.'
        })),
        bar: z.optional(zBar),
        baz: z.optional(z.object({
            baz: z.optional(z.string())
        })),
        qux: z.optional(z.iso.date()),
        quux: z.optional(z.iso.datetime())
    }))
});

export const zPostFooData = z.object({
    body: zFoo3,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});
