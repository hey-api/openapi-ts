// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

/**
 * This is Bar schema.
 */
export const zBar: z.AnyZodObject = z.object({
    foo: z.lazy(() => {
        return zFoo;
    }).optional()
}).describe('This is Bar schema.');

/**
 * This is Foo schema.
 */
export const zFoo: z.ZodTypeAny = z.union([
    z.object({
        foo: z.string().regex(/^\\d{3}-\\d{2}-\\d{4}$/).describe('This is foo property.').optional(),
        bar: zBar.optional(),
        baz: z.array(z.lazy(() => {
            return zFoo;
        })).describe('This is baz property.').optional(),
        qux: z.number().int().gt(0).describe('This is qux property.').optional().default(0)
    }),
    z.null()
]).default(null);

export const zBaz = z.string().regex(/foo\\nbar/).readonly().default('baz');

export const zQux = z.record(z.object({
    qux: z.string().optional()
}));

/**
 * This is Foo parameter.
 */
export const zFoo2 = z.string().describe('This is Foo parameter.');

export const zFoo3 = z.object({
    foo: zBar.optional()
});

export const zPatchFooData = z.object({
    body: z.object({
        foo: z.string().optional()
    }),
    path: z.never().optional(),
    query: z.object({
        foo: z.string().describe('This is Foo parameter.').optional(),
        bar: zBar.optional(),
        baz: z.object({
            baz: z.string().optional()
        }).optional(),
        qux: z.string().date().optional(),
        quux: z.string().datetime().optional()
    }).optional()
});

export const zPostFooData = z.object({
    body: zFoo3,
    path: z.never().optional(),
    query: z.never().optional()
});
