// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod/v4';

/**
 * This is Bar schema.
 */
export const zBar = z.object({
    get foo(): z.ZodOptional {
        return z.optional(zFoo);
    }
});

/**
 * This is Foo schema.
 */
export const zFoo = z.union([
    z.object({
        foo: z.optional(z.string().regex(/^\\d{3}-\\d{2}-\\d{4}$/)),
        bar: z.optional(zBar),
        get baz(): z.ZodOptional {
            return z.optional(z.array(z.lazy((): any => {
                return zFoo;
            })));
        },
        qux: z.optional(z.int().gt(0)).default(0)
    }),
    z.null()
]).default(null);

export const zBaz = z.string().regex(/foo\\nbar/).readonly().default('baz');

export const zQux = z.record(z.string(), z.object({
    qux: z.optional(z.string())
}));

/**
 * This is Foo parameter.
 */
export const zFoo2 = z.string();

export const zFoo3 = z.object({
    foo: z.optional(zBar)
});

export const zPatchFooData = z.object({
    body: z.object({
        foo: z.optional(z.string())
    }),
    path: z.optional(z.never()),
    query: z.optional(z.object({
        foo: z.optional(z.string()),
        bar: z.optional(zBar),
        baz: z.optional(z.object({
            baz: z.optional(z.string())
        })),
        qux: z.optional(z.iso.date()),
        quux: z.optional(z.iso.datetime({
            offset: true
        }))
    }))
});

export const zPostFooData = z.object({
    body: zFoo3,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});
