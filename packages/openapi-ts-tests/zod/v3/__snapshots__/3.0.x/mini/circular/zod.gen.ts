// This file is auto-generated by @hey-api/openapi-ts

import * as z from 'zod/v4-mini';

export const zFoo = z.object({
    get quux() {
        return z.optional(z.lazy((): any => {
            return zQuux;
        }));
    }
});

export const zBar = z.object({
    get bar() {
        return z.optional(z.lazy((): any => {
            return zBar;
        }));
    },
    get baz() {
        return z.optional(z.lazy((): any => {
            return zBaz;
        }));
    }
});

export const zBaz = z.object({
    get quux() {
        return z.optional(z.lazy((): any => {
            return zQuux;
        }));
    }
});

export const zQux = z.union([
    z.intersection(z.object({
        type: z.literal('struct')
    }), z.lazy(() => {
        return z.lazy((): any => {
            return zCorge;
        });
    })),
    z.intersection(z.object({
        type: z.literal('array')
    }), zFoo)
]);

export const zQuux = z.object({
    qux: z.optional(zQux)
});

export const zCorge = z.object({
    baz: z.optional(z.array(zBaz))
});
