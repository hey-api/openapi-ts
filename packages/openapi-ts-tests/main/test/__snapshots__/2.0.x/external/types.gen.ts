// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: string;
};

export type ExternalSchemaA = ExternalSharedExternalSharedModel;

export type ExternalSchemaB = ExternalSharedExternalSharedModel;

export type ExternalSchemaC = ExternalSharedExternalSharedModel;

export type ExternalSchemaPathA = ExternalSharedExternalSharedModel;

export type ExternalSchemaPathB = ExternalSharedExternalSharedModel;

/**
 * External schema property (A)
 */
export type ExternalSchemaPropertyA = {
    uuid1?: ExternalSharedExternalSharedModelWithUuid;
};

/**
 * External schema property (B) - second use of UUID
 */
export type ExternalSchemaPropertyB = {
    uuid2?: ExternalSharedExternalSharedModelWithUuid;
};

/**
 * External schema property (C) - third use of UUID
 */
export type ExternalSchemaPropertyC = {
    uuid3?: ExternalSharedExternalSharedModelWithUuid;
};

/**
 * External schema property with duplicate refs (D)
 */
export type ExternalSchemaPropertyD = {
    uuid4?: ExternalSharedExternalSharedModelWithUuid;
    uuid5?: ExternalSharedExternalSharedModelWithUuid;
};

/**
 * External schema property via external property ref (id)
 */
export type ExternalSchemaExternalProp = {
    id3?: ExternalSharedId;
    id4?: ExternalSharedId;
};

/**
 * Alias to external property via component property ref
 */
export type ExternalSchemaExternalPropAlias = {
    id5?: ExternalSharedId;
    id6?: ExternalSharedId;
};

/**
 * External double nested prop via property ref
 */
export type ExternalDoubleNestedProp = {
    deep1?: ExternalSharedDeep;
    deep2?: ExternalSharedDeep;
};

/**
 * External double nested numeric properties
 */
export type ExternalDoubleNestedNumeric = {
    numeric1?: ExternalShared1;
    numeric2?: ExternalShared1;
};

export type ExternalNestedObjectA = ExternalSharedExternalNested;

export type ExternalNestedObjectB = ExternalSharedExternalNested;

export type ExternalNestedNumericObjectA = ExternalSharedExternalNestedNumeric;

export type ExternalNestedNumericObjectB = ExternalSharedExternalNestedNumeric;

/**
 * Mixed external property references
 */
export type ExternalMixedProperties = {
    id7?: ExternalSharedId;
    name1?: ExternalSharedName;
    uuid6?: ExternalSharedExternalSharedModelWithUuid;
    deep3?: ExternalSharedDeep;
    numeric3?: ExternalShared1;
};

/**
 * Array containing external references
 */
export type ExternalArraySchema = {
    items?: Array<ExternalSharedExternalSharedModel>;
    uuidItems?: Array<ExternalSharedExternalSharedModelWithUuid>;
};

/**
 * Union type with external references
 */
export type ExternalUnionSchema = unknown;

/**
 * AllOf with external references
 */
export type ExternalAllOfSchema = ExternalSharedExternalSharedModel & {
    additional?: ExternalSharedExternalSharedModelWithUuid;
};

/**
 * AnyOf with external references
 */
export type ExternalAnyOfSchema = unknown;

export type ExternalSharedExternalNested = {
    inner?: {
        deep?: string;
    };
};

export type ExternalSharedDeep = string;

export type ExternalSharedExternalNestedNumeric = {
    0?: {
        1?: string;
    };
};

export type ExternalShared1 = string;

export type ExternalSharedExternalSharedModel = {
    id: string;
    name?: string;
};

export type ExternalSharedId = string;

export type ExternalSharedName = string;

export type ExternalSharedExternalSharedModelWithUuid = string;

export type GetExternalModelData = {
    body?: never;
    path: {
        id: unknown;
    };
    query?: {
        uuid?: unknown;
    };
    url: '/external-model';
};

export type GetExternalModelErrors = {
    /**
     * Response using external UUID
     */
    400: ExternalSharedExternalSharedModelWithUuid;
};

export type GetExternalModelError = GetExternalModelErrors[keyof GetExternalModelErrors];

export type GetExternalModelResponses = {
    /**
     * Response using external model
     */
    200: ExternalSharedExternalSharedModel;
};

export type GetExternalModelResponse = GetExternalModelResponses[keyof GetExternalModelResponses];

export type PostExternalModelData = {
    /**
     * Request body using external model
     */
    body: ExternalSharedExternalSharedModel;
    path?: never;
    query?: never;
    url: '/external-model';
};

export type PostExternalModelErrors = {
    /**
     * Response with union of external types
     */
    422: unknown;
};

export type PostExternalModelResponses = {
    /**
     * Response using external model
     */
    201: ExternalSharedExternalSharedModel;
};

export type PostExternalModelResponse = PostExternalModelResponses[keyof PostExternalModelResponses];

export type GetExternalUuidData = {
    body?: never;
    path?: never;
    query?: {
        uuid?: unknown;
    };
    url: '/external-uuid';
};

export type GetExternalUuidResponses = {
    /**
     * Response using external UUID
     */
    200: ExternalSharedExternalSharedModelWithUuid;
};

export type GetExternalUuidResponse = GetExternalUuidResponses[keyof GetExternalUuidResponses];

export type PutExternalUuidData = {
    /**
     * Request body using external UUID
     */
    body?: ExternalSharedExternalSharedModelWithUuid;
    path?: never;
    query?: never;
    url: '/external-uuid';
};

export type PutExternalUuidResponses = {
    /**
     * Response using external UUID
     */
    200: ExternalSharedExternalSharedModelWithUuid;
};

export type PutExternalUuidResponse = PutExternalUuidResponses[keyof PutExternalUuidResponses];

export type GetExternalNestedData = {
    body?: never;
    headers?: {
        deep?: unknown;
    };
    path?: never;
    query?: never;
    url: '/external-nested';
};

export type GetExternalNestedResponses = {
    /**
     * Response using external nested object
     */
    200: ExternalSharedExternalNested;
};

export type GetExternalNestedResponse = GetExternalNestedResponses[keyof GetExternalNestedResponses];

export type PostExternalNestedData = {
    /**
     * Request body using external nested object
     */
    body?: ExternalSharedExternalNested;
    path?: never;
    query?: never;
    url: '/external-nested';
};

export type PostExternalNestedResponses = {
    /**
     * Response using external nested object
     */
    201: ExternalSharedExternalNested;
};

export type PostExternalNestedResponse = PostExternalNestedResponses[keyof PostExternalNestedResponses];

export type GetExternalMixedData = {
    body?: never;
    headers?: {
        deep?: unknown;
    };
    path: {
        id: unknown;
    };
    query?: {
        uuid?: unknown;
        numeric?: unknown;
    };
    url: '/external-mixed';
};

export type GetExternalMixedResponses = {
    /**
     * Response with array of external models
     */
    200: Array<ExternalSharedExternalSharedModel>;
};

export type GetExternalMixedResponse = GetExternalMixedResponses[keyof GetExternalMixedResponses];

export type PostExternalMixedData = {
    /**
     * Request body with mixed external properties
     */
    body?: {
        id?: ExternalSharedId;
        name?: ExternalSharedName;
        uuid?: ExternalSharedExternalSharedModelWithUuid;
        deep?: ExternalSharedDeep;
    };
    path?: never;
    query?: never;
    url: '/external-mixed';
};

export type PostExternalMixedResponses = {
    /**
     * Response using external model
     */
    201: ExternalSharedExternalSharedModel;
};

export type PostExternalMixedResponse = PostExternalMixedResponses[keyof PostExternalMixedResponses];

export type GetExternalArrayData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/external-array';
};

export type GetExternalArrayResponses = {
    /**
     * Response with array of external models
     */
    200: Array<ExternalSharedExternalSharedModel>;
};

export type GetExternalArrayResponse = GetExternalArrayResponses[keyof GetExternalArrayResponses];

export type PostExternalArrayData = {
    body: Array<ExternalSharedExternalSharedModel>;
    path?: never;
    query?: never;
    url: '/external-array';
};

export type PostExternalArrayResponses = {
    /**
     * Response with array of external models
     */
    201: Array<ExternalSharedExternalSharedModel>;
};

export type PostExternalArrayResponse = PostExternalArrayResponses[keyof PostExternalArrayResponses];

export type GetExternalUnionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/external-union';
};

export type GetExternalUnionResponses = {
    /**
     * Response with union of external types
     */
    200: unknown;
};

export type PostExternalUnionData = {
    body: unknown;
    path?: never;
    query?: never;
    url: '/external-union';
};

export type PostExternalUnionResponses = {
    /**
     * Response with union of external types
     */
    201: unknown;
};

export type GetExternalPropertiesByIdData = {
    body?: never;
    headers?: {
        deep?: unknown;
    };
    path: {
        id: unknown;
    };
    query?: {
        uuid?: unknown;
    };
    url: '/external-properties/{id}';
};

export type GetExternalPropertiesByIdResponses = {
    200: {
        id?: ExternalSharedId;
        name?: ExternalSharedName;
        uuid?: ExternalSharedExternalSharedModelWithUuid;
        deep?: ExternalSharedDeep;
        numeric?: ExternalShared1;
    };
};

export type GetExternalPropertiesByIdResponse = GetExternalPropertiesByIdResponses[keyof GetExternalPropertiesByIdResponses];
